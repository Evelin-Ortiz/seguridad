

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Sep 22 16:05:21 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25     0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60     0000                     	;# 
    61     0001                     	;# 
    62     0002                     	;# 
    63     0003                     	;# 
    64     0004                     	;# 
    65     0005                     	;# 
    66     0006                     	;# 
    67     0007                     	;# 
    68     0008                     	;# 
    69     0009                     	;# 
    70     000A                     	;# 
    71     000B                     	;# 
    72     000C                     	;# 
    73     000D                     	;# 
    74     000E                     	;# 
    75     000E                     	;# 
    76     000F                     	;# 
    77     0010                     	;# 
    78     0011                     	;# 
    79     0012                     	;# 
    80     0013                     	;# 
    81     0014                     	;# 
    82     0015                     	;# 
    83     0015                     	;# 
    84     0016                     	;# 
    85     0017                     	;# 
    86     0018                     	;# 
    87     0019                     	;# 
    88     001A                     	;# 
    89     001B                     	;# 
    90     001B                     	;# 
    91     001C                     	;# 
    92     001D                     	;# 
    93     001E                     	;# 
    94     001F                     	;# 
    95     0081                     	;# 
    96     0085                     	;# 
    97     0086                     	;# 
    98     0087                     	;# 
    99     0088                     	;# 
   100     0089                     	;# 
   101     008C                     	;# 
   102     008D                     	;# 
   103     008E                     	;# 
   104     008F                     	;# 
   105     0090                     	;# 
   106     0091                     	;# 
   107     0092                     	;# 
   108     0093                     	;# 
   109     0093                     	;# 
   110     0093                     	;# 
   111     0094                     	;# 
   112     0095                     	;# 
   113     0096                     	;# 
   114     0097                     	;# 
   115     0098                     	;# 
   116     0099                     	;# 
   117     009A                     	;# 
   118     009B                     	;# 
   119     009C                     	;# 
   120     009D                     	;# 
   121     009E                     	;# 
   122     009F                     	;# 
   123     0105                     	;# 
   124     0107                     	;# 
   125     0108                     	;# 
   126     0109                     	;# 
   127     010C                     	;# 
   128     010C                     	;# 
   129     010D                     	;# 
   130     010E                     	;# 
   131     010F                     	;# 
   132     0185                     	;# 
   133     0187                     	;# 
   134     0188                     	;# 
   135     0189                     	;# 
   136     018C                     	;# 
   137     018D                     	;# 
   138     0000                     	;# 
   139     0001                     	;# 
   140     0002                     	;# 
   141     0003                     	;# 
   142     0004                     	;# 
   143     0005                     	;# 
   144     0006                     	;# 
   145     0007                     	;# 
   146     0008                     	;# 
   147     0009                     	;# 
   148     000A                     	;# 
   149     000B                     	;# 
   150     000C                     	;# 
   151     000D                     	;# 
   152     000E                     	;# 
   153     000E                     	;# 
   154     000F                     	;# 
   155     0010                     	;# 
   156     0011                     	;# 
   157     0012                     	;# 
   158     0013                     	;# 
   159     0014                     	;# 
   160     0015                     	;# 
   161     0015                     	;# 
   162     0016                     	;# 
   163     0017                     	;# 
   164     0018                     	;# 
   165     0019                     	;# 
   166     001A                     	;# 
   167     001B                     	;# 
   168     001B                     	;# 
   169     001C                     	;# 
   170     001D                     	;# 
   171     001E                     	;# 
   172     001F                     	;# 
   173     0081                     	;# 
   174     0085                     	;# 
   175     0086                     	;# 
   176     0087                     	;# 
   177     0088                     	;# 
   178     0089                     	;# 
   179     008C                     	;# 
   180     008D                     	;# 
   181     008E                     	;# 
   182     008F                     	;# 
   183     0090                     	;# 
   184     0091                     	;# 
   185     0092                     	;# 
   186     0093                     	;# 
   187     0093                     	;# 
   188     0093                     	;# 
   189     0094                     	;# 
   190     0095                     	;# 
   191     0096                     	;# 
   192     0097                     	;# 
   193     0098                     	;# 
   194     0099                     	;# 
   195     009A                     	;# 
   196     009B                     	;# 
   197     009C                     	;# 
   198     009D                     	;# 
   199     009E                     	;# 
   200     009F                     	;# 
   201     0105                     	;# 
   202     0107                     	;# 
   203     0108                     	;# 
   204     0109                     	;# 
   205     010C                     	;# 
   206     010C                     	;# 
   207     010D                     	;# 
   208     010E                     	;# 
   209     010F                     	;# 
   210     0185                     	;# 
   211     0187                     	;# 
   212     0188                     	;# 
   213     0189                     	;# 
   214     018C                     	;# 
   215     018D                     	;# 
   216     0000                     	;# 
   217     0001                     	;# 
   218     0002                     	;# 
   219     0003                     	;# 
   220     0004                     	;# 
   221     0005                     	;# 
   222     0006                     	;# 
   223     0007                     	;# 
   224     0008                     	;# 
   225     0009                     	;# 
   226     000A                     	;# 
   227     000B                     	;# 
   228     000C                     	;# 
   229     000D                     	;# 
   230     000E                     	;# 
   231     000E                     	;# 
   232     000F                     	;# 
   233     0010                     	;# 
   234     0011                     	;# 
   235     0012                     	;# 
   236     0013                     	;# 
   237     0014                     	;# 
   238     0015                     	;# 
   239     0015                     	;# 
   240     0016                     	;# 
   241     0017                     	;# 
   242     0018                     	;# 
   243     0019                     	;# 
   244     001A                     	;# 
   245     001B                     	;# 
   246     001B                     	;# 
   247     001C                     	;# 
   248     001D                     	;# 
   249     001E                     	;# 
   250     001F                     	;# 
   251     0081                     	;# 
   252     0085                     	;# 
   253     0086                     	;# 
   254     0087                     	;# 
   255     0088                     	;# 
   256     0089                     	;# 
   257     008C                     	;# 
   258     008D                     	;# 
   259     008E                     	;# 
   260     008F                     	;# 
   261     0090                     	;# 
   262     0091                     	;# 
   263     0092                     	;# 
   264     0093                     	;# 
   265     0093                     	;# 
   266     0093                     	;# 
   267     0094                     	;# 
   268     0095                     	;# 
   269     0096                     	;# 
   270     0097                     	;# 
   271     0098                     	;# 
   272     0099                     	;# 
   273     009A                     	;# 
   274     009B                     	;# 
   275     009C                     	;# 
   276     009D                     	;# 
   277     009E                     	;# 
   278     009F                     	;# 
   279     0105                     	;# 
   280     0107                     	;# 
   281     0108                     	;# 
   282     0109                     	;# 
   283     010C                     	;# 
   284     010C                     	;# 
   285     010D                     	;# 
   286     010E                     	;# 
   287     010F                     	;# 
   288     0185                     	;# 
   289     0187                     	;# 
   290     0188                     	;# 
   291     0189                     	;# 
   292     018C                     	;# 
   293     018D                     	;# 
   294     0000                     	;# 
   295     0001                     	;# 
   296     0002                     	;# 
   297     0003                     	;# 
   298     0004                     	;# 
   299     0005                     	;# 
   300     0006                     	;# 
   301     0007                     	;# 
   302     0008                     	;# 
   303     0009                     	;# 
   304     000A                     	;# 
   305     000B                     	;# 
   306     000C                     	;# 
   307     000D                     	;# 
   308     000E                     	;# 
   309     000E                     	;# 
   310     000F                     	;# 
   311     0010                     	;# 
   312     0011                     	;# 
   313     0012                     	;# 
   314     0013                     	;# 
   315     0014                     	;# 
   316     0015                     	;# 
   317     0015                     	;# 
   318     0016                     	;# 
   319     0017                     	;# 
   320     0018                     	;# 
   321     0019                     	;# 
   322     001A                     	;# 
   323     001B                     	;# 
   324     001B                     	;# 
   325     001C                     	;# 
   326     001D                     	;# 
   327     001E                     	;# 
   328     001F                     	;# 
   329     0081                     	;# 
   330     0085                     	;# 
   331     0086                     	;# 
   332     0087                     	;# 
   333     0088                     	;# 
   334     0089                     	;# 
   335     008C                     	;# 
   336     008D                     	;# 
   337     008E                     	;# 
   338     008F                     	;# 
   339     0090                     	;# 
   340     0091                     	;# 
   341     0092                     	;# 
   342     0093                     	;# 
   343     0093                     	;# 
   344     0093                     	;# 
   345     0094                     	;# 
   346     0095                     	;# 
   347     0096                     	;# 
   348     0097                     	;# 
   349     0098                     	;# 
   350     0099                     	;# 
   351     009A                     	;# 
   352     009B                     	;# 
   353     009C                     	;# 
   354     009D                     	;# 
   355     009E                     	;# 
   356     009F                     	;# 
   357     0105                     	;# 
   358     0107                     	;# 
   359     0108                     	;# 
   360     0109                     	;# 
   361     010C                     	;# 
   362     010C                     	;# 
   363     010D                     	;# 
   364     010E                     	;# 
   365     010F                     	;# 
   366     0185                     	;# 
   367     0187                     	;# 
   368     0188                     	;# 
   369     0189                     	;# 
   370     018C                     	;# 
   371     018D                     	;# 
   372                           
   373                           	psect	idataBANK0
   374     0524                     __pidataBANK0:
   375                           
   376                           ;initializer for keypad_getkey@F1268
   377     0524  3431               	retlw	49
   378     0525  3432               	retlw	50
   379     0526  3433               	retlw	51
   380     0527  3441               	retlw	65
   381     0528  3434               	retlw	52
   382     0529  3435               	retlw	53
   383     052A  3436               	retlw	54
   384     052B  3442               	retlw	66
   385     052C  3437               	retlw	55
   386     052D  3438               	retlw	56
   387     052E  3439               	retlw	57
   388     052F  3443               	retlw	67
   389     0530  342A               	retlw	42
   390     0531  3430               	retlw	48
   391     0532  3423               	retlw	35
   392     0533  3444               	retlw	68
   393                           
   394                           	psect	strings
   395     0003                     __pstrings:
   396     0003                     stringtab:
   397     0003                     __stringtab:
   398     0003                     stringcode:	
   399                           ;	String table - string pointers are 1 byte each
   400                           
   401     0003                     stringdir:
   402     0003  3000               	movlw	high stringdir
   403     0004  008A               	movwf	10
   404     0005  0804               	movf	4,w
   405     0006  0A84               	incf	4,f
   406     0007  0782               	addwf	2,f
   407     0008                     __stringbase:
   408     0008  3400               	retlw	0
   409     0009                     __end_of__stringtab:
   410     0009                     _password:
   411     0009  3432               	retlw	50
   412     000A  3430               	retlw	48
   413     000B  3432               	retlw	50
   414     000C  3433               	retlw	51
   415     000D  3400               	retlw	0
   416     000E                     __end_of_password:
   417     0006                     _PORTB	set	6
   418     0008                     _PORTD	set	8
   419     0041                     _RD1	set	65
   420     0040                     _RD0	set	64
   421     0095                     _WPUB	set	149
   422     0081                     _OPTION_REGbits	set	129
   423     0086                     _TRISB	set	134
   424     0088                     _TRISD	set	136
   425     008F                     _OSCCON	set	143
   426     0189                     _ANSELH	set	393
   427     000E                     STR_1:
   428     000E  3449               	retlw	73	;'I'
   429     000F  344E               	retlw	78	;'N'
   430     0010  3447               	retlw	71	;'G'
   431     0011  3452               	retlw	82	;'R'
   432     0012  3445               	retlw	69	;'E'
   433     0013  3453               	retlw	83	;'S'
   434     0014  3445               	retlw	69	;'E'
   435     0015  3420               	retlw	32	;' '
   436     0016  3443               	retlw	67	;'C'
   437     0017  344F               	retlw	79	;'O'
   438     0018  344E               	retlw	78	;'N'
   439     0019  3454               	retlw	84	;'T'
   440     001A  3452               	retlw	82	;'R'
   441     001B  3441               	retlw	65	;'A'
   442     001C  3453               	retlw	83	;'S'
   443     001D  3445               	retlw	69	;'E'
   444     001E  34D1               	retlw	-47
   445     001F  3441               	retlw	65	;'A'
   446     0020  3420               	retlw	32	;' '
   447     0021  343A               	retlw	58	;':'
   448     0022  3433               	retlw	51	;'3'
   449     0023  3400               	retlw	0
   450     0024                     STR_3:
   451     0024  3443               	retlw	67	;'C'
   452     0025  346C               	retlw	108	;'l'
   453     0026  3461               	retlw	97	;'a'
   454     0027  3476               	retlw	118	;'v'
   455     0028  3465               	retlw	101	;'e'
   456     0029  3420               	retlw	32	;' '
   457     002A  3449               	retlw	73	;'I'
   458     002B  346E               	retlw	110	;'n'
   459     002C  3463               	retlw	99	;'c'
   460     002D  346F               	retlw	111	;'o'
   461     002E  3472               	retlw	114	;'r'
   462     002F  3472               	retlw	114	;'r'
   463     0030  3465               	retlw	101	;'e'
   464     0031  3463               	retlw	99	;'c'
   465     0032  3474               	retlw	116	;'t'
   466     0033  3461               	retlw	97	;'a'
   467     0034  3400               	retlw	0
   468     0035                     STR_2:
   469     0035  3443               	retlw	67	;'C'
   470     0036  346C               	retlw	108	;'l'
   471     0037  3461               	retlw	97	;'a'
   472     0038  3476               	retlw	118	;'v'
   473     0039  3465               	retlw	101	;'e'
   474     003A  3420               	retlw	32	;' '
   475     003B  3443               	retlw	67	;'C'
   476     003C  346F               	retlw	111	;'o'
   477     003D  3472               	retlw	114	;'r'
   478     003E  3472               	retlw	114	;'r'
   479     003F  3465               	retlw	101	;'e'
   480     0040  3463               	retlw	99	;'c'
   481     0041  3474               	retlw	116	;'t'
   482     0042  3461               	retlw	97	;'a'
   483     0043  3400               	retlw	0
   484                           
   485                           	psect	cinit
   486     07E8                     start_initialization:	
   487                           ; #config settings
   488                           
   489     07E8                     __initialization:
   490                           
   491                           ; Initialize objects allocated to BANK0
   492     07E8  1383               	bcf	3,7	;select IRP bank0
   493     07E9  3043               	movlw	low (__pdataBANK0+16)
   494     07EA  00FD               	movwf	btemp+-1
   495     07EB  3005               	movlw	high __pidataBANK0
   496     07EC  00FE               	movwf	btemp
   497     07ED  3024               	movlw	low __pidataBANK0
   498     07EE  00FF               	movwf	btemp+1
   499     07EF  3033               	movlw	low __pdataBANK0
   500     07F0  0084               	movwf	4
   501     07F1  120A  118A  2549  120A  118A  	fcall	init_ram0
   502                           
   503                           ; Clear objects allocated to BANK0
   504     07F6  01C3               	clrf	__pbssBANK0& (0+127)
   505     07F7  01C4               	clrf	(__pbssBANK0+1)& (0+127)
   506     07F8  01C5               	clrf	(__pbssBANK0+2)& (0+127)
   507     07F9  01C6               	clrf	(__pbssBANK0+3)& (0+127)
   508     07FA  01C7               	clrf	(__pbssBANK0+4)& (0+127)
   509                           
   510                           ; Clear objects allocated to COMMON
   511     07FB  01FC               	clrf	__pbssCOMMON& (0+127)
   512     07FC                     end_of_initialization:	
   513                           ;End of C runtime variable initialization code
   514                           
   515     07FC                     __end_of__initialization:
   516     07FC  0183               	clrf	3
   517     07FD  120A  118A  2E76   	ljmp	_main	;jump to C main() function
   518                           
   519                           	psect	bssCOMMON
   520     007C                     __pbssCOMMON:
   521     007C                     _idx:
   522     007C                     	ds	1
   523                           
   524                           	psect	bssBANK0
   525     0043                     __pbssBANK0:
   526     0043                     _pass_user:
   527     0043                     	ds	5
   528                           
   529                           	psect	dataBANK0
   530     0033                     __pdataBANK0:
   531     0033                     keypad_getkey@F1268:
   532     0033                     	ds	16
   533                           
   534                           	psect	inittext
   535     0545                     init_fetch0:	
   536                           ;	Called with low address in FSR and high address in W
   537                           
   538     0545  087E               	movf	btemp,w
   539     0546  008A               	movwf	10
   540     0547  087F               	movf	btemp+1,w
   541     0548  0082               	movwf	2
   542     0549                     init_ram0:	
   543                           ;Called with:
   544                           ;	high address of idata address in btemp 
   545                           ;	low address of idata address in btemp+1 
   546                           ;	low address of data in FSR
   547                           ;	high address + 1 of data in btemp-1
   548                           
   549     0549  120A  118A  2545  120A  118A  	fcall	init_fetch0
   550     054E  0080               	movwf	0
   551     054F  0A84               	incf	4,f
   552     0550  0804               	movf	4,w
   553     0551  067D               	xorwf	btemp+-1,w
   554     0552  1903               	btfsc	3,2
   555     0553  3400               	retlw	0
   556     0554  0AFF               	incf	btemp+1,f
   557     0555  1903               	btfsc	3,2
   558     0556  0AFE               	incf	btemp,f
   559     0557  2D49               	goto	init_ram0
   560                           
   561                           	psect	cstackCOMMON
   562     0070                     __pcstackCOMMON:
   563     0070                     ?_LCD_Init:
   564     0070                     ?_keypad_init:	
   565                           ; 1 bytes @ 0x0
   566                           
   567     0070                     ??_keypad_init:	
   568                           ; 1 bytes @ 0x0
   569                           
   570     0070                     ?_LCD_Command:	
   571                           ; 1 bytes @ 0x0
   572                           
   573     0070                     ??_LCD_Command:	
   574                           ; 1 bytes @ 0x0
   575                           
   576     0070                     ?_keypad_getkey:	
   577                           ; 1 bytes @ 0x0
   578                           
   579     0070                     ??_keypad_getkey:	
   580                           ; 1 bytes @ 0x0
   581                           
   582     0070                     ?_LCD_Char:	
   583                           ; 1 bytes @ 0x0
   584                           
   585     0070                     ??_LCD_Char:	
   586                           ; 1 bytes @ 0x0
   587                           
   588     0070                     ?_LCD_Clear:	
   589                           ; 1 bytes @ 0x0
   590                           
   591     0070                     ?_main:	
   592                           ; 1 bytes @ 0x0
   593                           
   594     0070                     ?_LCD_String:	
   595                           ; 1 bytes @ 0x0
   596                           
   597     0070                     ?_strncmp:	
   598                           ; 1 bytes @ 0x0
   599                           
   600     0070                     strncmp@s2:	
   601                           ; 2 bytes @ 0x0
   602                           
   603                           
   604                           ; 1 bytes @ 0x0
   605     0070                     	ds	1
   606     0071                     strncmp@len:
   607                           
   608                           ; 2 bytes @ 0x1
   609     0071                     	ds	1
   610     0072                     LCD_Command@cmd:
   611     0072                     LCD_Char@dat:	
   612                           ; 1 bytes @ 0x2
   613                           
   614                           
   615                           ; 1 bytes @ 0x2
   616     0072                     	ds	1
   617     0073                     ??_LCD_Init:
   618     0073                     ??_strncmp:	
   619                           ; 1 bytes @ 0x3
   620                           
   621     0073                     ??_LCD_Clear:	
   622                           ; 1 bytes @ 0x3
   623                           
   624     0073                     ??_LCD_String:	
   625                           ; 1 bytes @ 0x3
   626                           
   627     0073                     LCD_String@msg:	
   628                           ; 1 bytes @ 0x3
   629                           
   630                           
   631                           ; 1 bytes @ 0x3
   632     0073                     	ds	1
   633     0074                     ?_LCD_String_xy:
   634     0074                     LCD_String_xy@pos:	
   635                           ; 1 bytes @ 0x4
   636                           
   637                           
   638                           ; 1 bytes @ 0x4
   639     0074                     	ds	1
   640     0075                     LCD_String_xy@msg:
   641     0075                     strncmp@s1:	
   642                           ; 1 bytes @ 0x5
   643                           
   644                           
   645                           ; 1 bytes @ 0x5
   646     0075                     	ds	1
   647     0076                     ??_LCD_String_xy:
   648     0076                     LCD_String_xy@row:	
   649                           ; 1 bytes @ 0x6
   650                           
   651                           
   652                           ; 1 bytes @ 0x6
   653     0076                     	ds	1
   654     0077                     LCD_String_xy@location:
   655                           
   656                           ; 1 bytes @ 0x7
   657     0077                     	ds	1
   658     0078                     ??_main:
   659                           
   660                           ; 1 bytes @ 0x8
   661     0078                     	ds	3
   662     007B                     main@key:
   663                           
   664                           ; 1 bytes @ 0xB
   665     007B                     	ds	1
   666                           
   667                           	psect	cstackBANK0
   668     0020                     __pcstackBANK0:
   669     0020                     keypad_getkey@letras:
   670                           
   671                           ; 16 bytes @ 0x0
   672     0020                     	ds	16
   673     0030                     keypad_getkey@valor:
   674                           
   675                           ; 1 bytes @ 0x10
   676     0030                     	ds	1
   677     0031                     keypad_getkey@i:
   678                           
   679                           ; 2 bytes @ 0x11
   680     0031                     	ds	2
   681                           
   682                           	psect	maintext
   683     0676                     __pmaintext:	
   684 ;;
   685 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   686 ;;
   687 ;; *************** function _main *****************
   688 ;; Defined at:
   689 ;;		line 34 in file "MainSeguridad.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;  key             1   11[COMMON] unsigned char 
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   698 ;; Tracked objects:
   699 ;;		On entry : B00/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   703 ;;      Params:         0       0       0       0       0
   704 ;;      Locals:         1       0       0       0       0
   705 ;;      Temps:          3       0       0       0       0
   706 ;;      Totals:         4       0       0       0       0
   707 ;;Total ram usage:        4 bytes
   708 ;; Hardware stack levels required when called: 3
   709 ;; This function calls:
   710 ;;		_LCD_Char
   711 ;;		_LCD_Clear
   712 ;;		_LCD_Command
   713 ;;		_LCD_Init
   714 ;;		_LCD_String_xy
   715 ;;		_keypad_getkey
   716 ;;		_keypad_init
   717 ;;		_strncmp
   718 ;; This function is called by:
   719 ;;		Startup code after reset
   720 ;; This function uses a non-reentrant model
   721 ;;
   722                           
   723     0676                     _main:	
   724                           ;psect for function _main
   725                           
   726     0676                     l1203:	
   727                           ;incstack = 0
   728                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   729                           
   730                           
   731                           ;MainSeguridad.c: 38:     OSCCON = 0x71;
   732     0676  3071               	movlw	113
   733     0677  1683               	bsf	3,5	;RP0=1, select bank1
   734     0678  1303               	bcf	3,6	;RP1=0, select bank1
   735     0679  008F               	movwf	15	;volatile
   736     067A                     l1205:
   737                           
   738                           ;MainSeguridad.c: 40:     LCD_Init();
   739     067A  120A  118A  259A  120A  118A  	fcall	_LCD_Init
   740     067F                     l1207:
   741                           
   742                           ;MainSeguridad.c: 42:     keypad_init();
   743     067F  120A  118A  2534  120A  118A  	fcall	_keypad_init
   744     0684                     l1209:
   745                           
   746                           ;MainSeguridad.c: 45:         LCD_String_xy(0,0,"INGRESE CONTRASEÑA :3");
   747     0684  01F4               	clrf	LCD_String_xy@pos
   748     0685  3006               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   749     0686  00F5               	movwf	LCD_String_xy@msg
   750     0687  3000               	movlw	0
   751     0688  120A  118A  2577  120A  118A  	fcall	_LCD_String_xy
   752     068D                     l1211:
   753                           
   754                           ;MainSeguridad.c: 46:         LCD_Command(0xC0);
   755     068D  30C0               	movlw	192
   756     068E  120A  118A  25C4  120A  118A  	fcall	_LCD_Command
   757     0693                     l1213:
   758                           
   759                           ;MainSeguridad.c: 48:             key = keypad_getkey();
   760     0693  120A  118A  2707  120A  118A  	fcall	_keypad_getkey
   761     0698  00FB               	movwf	main@key
   762     0699                     l1215:
   763                           
   764                           ;MainSeguridad.c: 49:             if(key != 0){
   765     0699  087B               	movf	main@key,w
   766     069A  1903               	btfsc	3,2
   767     069B  2E9D               	goto	u621
   768     069C  2E9E               	goto	u620
   769     069D                     u621:
   770     069D  2EAE               	goto	l1223
   771     069E                     u620:
   772     069E                     l1217:
   773                           
   774                           ;MainSeguridad.c: 51:                 LCD_Char(key);
   775     069E  087B               	movf	main@key,w
   776     069F  120A  118A  25FA  120A  118A  	fcall	_LCD_Char
   777     06A4                     l1219:
   778                           
   779                           ;MainSeguridad.c: 52:                 pass_user[idx++] = key;
   780     06A4  087C               	movf	_idx,w
   781     06A5  3E43               	addlw	(low (_pass_user| 0))& (0+255)
   782     06A6  0084               	movwf	4
   783     06A7  087B               	movf	main@key,w
   784     06A8  1383               	bcf	3,7	;select IRP bank0
   785     06A9  0080               	movwf	0
   786     06AA                     l1221:
   787     06AA  3001               	movlw	1
   788     06AB  00FF               	movwf	btemp+1
   789     06AC  087F               	movf	btemp+1,w
   790     06AD  07FC               	addwf	_idx,f
   791     06AE                     l1223:
   792                           
   793                           ;MainSeguridad.c: 54:             _delay((unsigned long)((100)*(8000000/4000.0)));
   794     06AE  3002               	movlw	2
   795     06AF  00FA               	movwf	??_main+2
   796     06B0  3004               	movlw	4
   797     06B1  00F9               	movwf	??_main+1
   798     06B2  30BA               	movlw	186
   799     06B3  00F8               	movwf	??_main
   800     06B4                     u657:
   801     06B4  0BF8               	decfsz	??_main,f
   802     06B5  2EB4               	goto	u657
   803     06B6  0BF9               	decfsz	??_main+1,f
   804     06B7  2EB4               	goto	u657
   805     06B8  0BFA               	decfsz	??_main+2,f
   806     06B9  2EB4               	goto	u657
   807     06BA  0000               	nop
   808     06BB                     l1225:
   809                           
   810                           ;MainSeguridad.c: 55:         }while(idx < 5);
   811     06BB  3005               	movlw	5
   812     06BC  027C               	subwf	_idx,w
   813     06BD  1C03               	skipc
   814     06BE  2EC0               	goto	u631
   815     06BF  2EC1               	goto	u630
   816     06C0                     u631:
   817     06C0  2E93               	goto	l1213
   818     06C1                     u630:
   819     06C1                     l1227:
   820                           
   821                           ;MainSeguridad.c: 57:         if(strncmp(pass_user,password,4)==0){
   822     06C1  3001               	movlw	(low ((_password-__stringbase)| (0+32768)))& (0+255)
   823     06C2  00F0               	movwf	strncmp@s2
   824     06C3  3004               	movlw	4
   825     06C4  00F1               	movwf	strncmp@len
   826     06C5  3000               	movlw	0
   827     06C6  00F2               	movwf	strncmp@len+1
   828     06C7  3043               	movlw	(low (_pass_user| 0))& (0+255)
   829     06C8  120A  118A  2630  120A  118A  	fcall	_strncmp
   830     06CD  0870               	movf	?_strncmp,w
   831     06CE  0471               	iorwf	?_strncmp+1,w
   832     06CF  1D03               	btfss	3,2
   833     06D0  2ED2               	goto	u641
   834     06D1  2ED3               	goto	u640
   835     06D2                     u641:
   836     06D2  2EE2               	goto	l1233
   837     06D3                     u640:
   838     06D3                     l1229:
   839                           
   840                           ;MainSeguridad.c: 58:             LCD_Clear();
   841     06D3  120A  118A  2514  120A  118A  	fcall	_LCD_Clear
   842     06D8                     l1231:
   843                           
   844                           ;MainSeguridad.c: 59:             LCD_String_xy(0,0,"Clave Correcta");
   845     06D8  01F4               	clrf	LCD_String_xy@pos
   846     06D9  302D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   847     06DA  00F5               	movwf	LCD_String_xy@msg
   848     06DB  3000               	movlw	0
   849     06DC  120A  118A  2577  120A  118A  	fcall	_LCD_String_xy
   850                           
   851                           ;MainSeguridad.c: 60:         }
   852     06E1  2EF0               	goto	l1237
   853     06E2                     l1233:
   854                           
   855                           ;MainSeguridad.c: 62:             LCD_Clear();
   856     06E2  120A  118A  2514  120A  118A  	fcall	_LCD_Clear
   857     06E7                     l1235:
   858                           
   859                           ;MainSeguridad.c: 63:             LCD_String_xy(0,0,"Clave Incorrecta");
   860     06E7  01F4               	clrf	LCD_String_xy@pos
   861     06E8  301C               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   862     06E9  00F5               	movwf	LCD_String_xy@msg
   863     06EA  3000               	movlw	0
   864     06EB  120A  118A  2577  120A  118A  	fcall	_LCD_String_xy
   865     06F0                     l1237:
   866                           
   867                           ;MainSeguridad.c: 65:         _delay((unsigned long)((2000)*(8000000/4000.0)));
   868     06F0  3015               	movlw	21
   869     06F1  00FA               	movwf	??_main+2
   870     06F2  304B               	movlw	75
   871     06F3  00F9               	movwf	??_main+1
   872     06F4  30BE               	movlw	190
   873     06F5  00F8               	movwf	??_main
   874     06F6                     u667:
   875     06F6  0BF8               	decfsz	??_main,f
   876     06F7  2EF6               	goto	u667
   877     06F8  0BF9               	decfsz	??_main+1,f
   878     06F9  2EF6               	goto	u667
   879     06FA  0BFA               	decfsz	??_main+2,f
   880     06FB  2EF6               	goto	u667
   881     06FC  0000               	nop
   882     06FD                     l1239:
   883                           
   884                           ;MainSeguridad.c: 66:         LCD_Clear();
   885     06FD  120A  118A  2514  120A  118A  	fcall	_LCD_Clear
   886     0702                     l1241:
   887                           
   888                           ;MainSeguridad.c: 67:         idx = 0;
   889     0702  01FC               	clrf	_idx
   890     0703  2E84               	goto	l1209
   891     0704  120A  118A  2800   	ljmp	start
   892     0707                     __end_of_main:
   893                           
   894                           	psect	text1
   895     0630                     __ptext1:	
   896 ;; *************** function _strncmp *****************
   897 ;; Defined at:
   898 ;;		line 4 in file "C:\Users\Asus\Desktop\MPLAB\pic\sources\c90\common\strncmp.c"
   899 ;; Parameters:    Size  Location     Type
   900 ;;  s1              1    wreg     PTR const unsigned char 
   901 ;;		 -> pass_user(5), 
   902 ;;  s2              1    0[COMMON] PTR const unsigned char 
   903 ;;		 -> password(5), 
   904 ;;  len             2    1[COMMON] unsigned int 
   905 ;; Auto vars:     Size  Location     Type
   906 ;;  s1              1    5[COMMON] PTR const unsigned char 
   907 ;;		 -> pass_user(5), 
   908 ;; Return value:  Size  Location     Type
   909 ;;                  2    0[COMMON] int 
   910 ;; Registers used:
   911 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
   912 ;; Tracked objects:
   913 ;;		On entry : 0/0
   914 ;;		On exit  : 0/0
   915 ;;		Unchanged: 0/0
   916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   917 ;;      Params:         3       0       0       0       0
   918 ;;      Locals:         1       0       0       0       0
   919 ;;      Temps:          2       0       0       0       0
   920 ;;      Totals:         6       0       0       0       0
   921 ;;Total ram usage:        6 bytes
   922 ;; Hardware stack levels used: 2
   923 ;; This function calls:
   924 ;;		Nothing
   925 ;; This function is called by:
   926 ;;		_main
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930     0630                     _strncmp:	
   931                           ;psect for function _strncmp
   932                           
   933                           
   934                           ;incstack = 0
   935                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
   936                           ;strncmp@s1 stored from wreg
   937     0630  00F5               	movwf	strncmp@s1
   938     0631                     l1181:
   939     0631  2E65               	goto	l1193
   940     0632                     l1183:
   941     0632  0875               	movf	strncmp@s1,w
   942     0633  0084               	movwf	4
   943     0634  1383               	bcf	3,7	;select IRP bank0
   944     0635  0800               	movf	0,w
   945     0636  1903               	btfsc	3,2
   946     0637  2E39               	goto	u591
   947     0638  2E3A               	goto	u590
   948     0639                     u591:
   949     0639  2E4A               	goto	l1187
   950     063A                     u590:
   951     063A                     l1185:
   952     063A  0870               	movf	strncmp@s2,w
   953     063B  0084               	movwf	4
   954     063C  120A  118A  2003  120A  118A  	fcall	stringdir
   955     0641  00F3               	movwf	??_strncmp
   956     0642  0875               	movf	strncmp@s1,w
   957     0643  0084               	movwf	4
   958     0644  0800               	movf	0,w
   959     0645  0673               	xorwf	??_strncmp,w
   960     0646  1903               	skipnz
   961     0647  2E49               	goto	u601
   962     0648  2E4A               	goto	u600
   963     0649                     u601:
   964     0649  2E5D               	goto	l1191
   965     064A                     u600:
   966     064A                     l1187:
   967     064A  0870               	movf	strncmp@s2,w
   968     064B  0084               	movwf	4
   969     064C  120A  118A  2003  120A  118A  	fcall	stringdir
   970     0651  00F3               	movwf	??_strncmp
   971     0652  0875               	movf	strncmp@s1,w
   972     0653  0084               	movwf	4
   973     0654  0800               	movf	0,w
   974     0655  00F4               	movwf	??_strncmp+1
   975     0656  0873               	movf	??_strncmp,w
   976     0657  0274               	subwf	??_strncmp+1,w
   977     0658  00F0               	movwf	?_strncmp
   978     0659  01F1               	clrf	?_strncmp+1
   979     065A  1C03               	skipc
   980     065B  03F1               	decf	?_strncmp+1,f
   981     065C  2E75               	goto	l692
   982     065D                     l1191:
   983     065D  3001               	movlw	1
   984     065E  00FF               	movwf	btemp+1
   985     065F  087F               	movf	btemp+1,w
   986     0660  07F5               	addwf	strncmp@s1,f
   987     0661  3001               	movlw	1
   988     0662  00FF               	movwf	btemp+1
   989     0663  087F               	movf	btemp+1,w
   990     0664  07F0               	addwf	strncmp@s2,f
   991     0665                     l1193:
   992     0665  3001               	movlw	1
   993     0666  02F1               	subwf	strncmp@len,f
   994     0667  3000               	movlw	0
   995     0668  1C03               	skipc
   996     0669  03F2               	decf	strncmp@len+1,f
   997     066A  02F2               	subwf	strncmp@len+1,f
   998     066B  0A71               	incf	strncmp@len,w
   999     066C  1D03               	skipz
  1000     066D  2E72               	goto	u611
  1001     066E  0A72               	incf	strncmp@len+1,w
  1002     066F  1D03               	btfss	3,2
  1003     0670  2E72               	goto	u611
  1004     0671  2E73               	goto	u610
  1005     0672                     u611:
  1006     0672  2E32               	goto	l1183
  1007     0673                     u610:
  1008     0673                     l1195:
  1009     0673  01F0               	clrf	?_strncmp
  1010     0674  01F1               	clrf	?_strncmp+1
  1011     0675                     l692:
  1012     0675  0008               	return
  1013     0676                     __end_of_strncmp:
  1014                           
  1015                           	psect	text2
  1016     0534                     __ptext2:	
  1017 ;; *************** function _keypad_init *****************
  1018 ;; Defined at:
  1019 ;;		line 38 in file "KEYPAD.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;                  1    wreg      void 
  1026 ;; Registers used:
  1027 ;;		wreg, status,2, status,0, btemp+1
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0
  1035 ;;      Temps:          0       0       0       0       0
  1036 ;;      Totals:         0       0       0       0       0
  1037 ;;Total ram usage:        0 bytes
  1038 ;; Hardware stack levels used: 1
  1039 ;; This function calls:
  1040 ;;		Nothing
  1041 ;; This function is called by:
  1042 ;;		_main
  1043 ;; This function uses a non-reentrant model
  1044 ;;
  1045                           
  1046     0534                     _keypad_init:	
  1047                           ;psect for function _keypad_init
  1048                           
  1049     0534                     l1059:	
  1050                           ;incstack = 0
  1051                           ; Regs used in _keypad_init: [wreg+status,2+status,0+btemp+1]
  1052                           
  1053                           
  1054                           ;KEYPAD.c: 40:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  1055     0534  30F0               	movlw	240
  1056     0535  00FF               	movwf	btemp+1
  1057     0536  087F               	movf	btemp+1,w
  1058     0537  1683               	bsf	3,5	;RP0=1, select bank1
  1059     0538  1303               	bcf	3,6	;RP1=0, select bank1
  1060     0539  0586               	andwf	6,f	;volatile
  1061                           
  1062                           ;KEYPAD.c: 41:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  1063     053A  30F0               	movlw	240
  1064     053B  00FF               	movwf	btemp+1
  1065     053C  087F               	movf	btemp+1,w
  1066     053D  0486               	iorwf	6,f	;volatile
  1067     053E                     l1061:
  1068                           
  1069                           ;KEYPAD.c: 42:     OPTION_REGbits.nRBPU = 0;
  1070     053E  1381               	bcf	1,7	;volatile
  1071     053F                     l1063:
  1072                           
  1073                           ;KEYPAD.c: 43:     WPUB =1;
  1074     053F  3001               	movlw	1
  1075     0540  0095               	movwf	21	;volatile
  1076     0541                     l1065:
  1077                           
  1078                           ;KEYPAD.c: 44:     ANSELH =0 ;
  1079     0541  1683               	bsf	3,5	;RP0=1, select bank3
  1080     0542  1703               	bsf	3,6	;RP1=1, select bank3
  1081     0543  0189               	clrf	9	;volatile
  1082     0544                     l91:
  1083     0544  0008               	return
  1084     0545                     __end_of_keypad_init:
  1085                           
  1086                           	psect	text3
  1087     0707                     __ptext3:	
  1088 ;; *************** function _keypad_getkey *****************
  1089 ;; Defined at:
  1090 ;;		line 60 in file "KEYPAD.c"
  1091 ;; Parameters:    Size  Location     Type
  1092 ;;		None
  1093 ;; Auto vars:     Size  Location     Type
  1094 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  1095 ;;  i               2   17[BANK0 ] int 
  1096 ;;  valor           1   16[BANK0 ] unsigned char 
  1097 ;; Return value:  Size  Location     Type
  1098 ;;                  1    wreg      unsigned char 
  1099 ;; Registers used:
  1100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1101 ;; Tracked objects:
  1102 ;;		On entry : 0/0
  1103 ;;		On exit  : 0/0
  1104 ;;		Unchanged: 0/0
  1105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1106 ;;      Params:         0       0       0       0       0
  1107 ;;      Locals:         0      19       0       0       0
  1108 ;;      Temps:          4       0       0       0       0
  1109 ;;      Totals:         4      19       0       0       0
  1110 ;;Total ram usage:       23 bytes
  1111 ;; Hardware stack levels used: 1
  1112 ;; This function calls:
  1113 ;;		Nothing
  1114 ;; This function is called by:
  1115 ;;		_main
  1116 ;; This function uses a non-reentrant model
  1117 ;;
  1118                           
  1119     0707                     _keypad_getkey:	
  1120                           ;psect for function _keypad_getkey
  1121                           
  1122     0707                     l1081:	
  1123                           ;incstack = 0
  1124                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  1125                           
  1126                           
  1127                           ;KEYPAD.c: 62: char letras[4][4]={ {'1','2','3','A'},
  1128     0707  3020               	movlw	keypad_getkey@letras& (0+255)
  1129     0708  0084               	movwf	4
  1130     0709  3033               	movlw	low keypad_getkey@F1268
  1131     070A  00F0               	movwf	??_keypad_getkey
  1132     070B  0804               	movf	4,w
  1133     070C  00F1               	movwf	??_keypad_getkey+1
  1134     070D  3010               	movlw	16
  1135     070E  00F2               	movwf	??_keypad_getkey+2
  1136     070F                     u370:
  1137     070F  0870               	movf	??_keypad_getkey,w
  1138     0710  0084               	movwf	4
  1139     0711  1383               	bcf	3,7	;select IRP bank0
  1140     0712  0800               	movf	0,w
  1141     0713  00F3               	movwf	??_keypad_getkey+3
  1142     0714  0AF0               	incf	??_keypad_getkey,f
  1143     0715  0871               	movf	??_keypad_getkey+1,w
  1144     0716  0084               	movwf	4
  1145     0717  0873               	movf	??_keypad_getkey+3,w
  1146     0718  0080               	movwf	0
  1147     0719  0AF1               	incf	??_keypad_getkey+1,f
  1148     071A  0BF2               	decfsz	??_keypad_getkey+2,f
  1149     071B  2F0F               	goto	u370
  1150     071C                     l1083:
  1151     071C                     l1085:
  1152                           
  1153                           ;KEYPAD.c: 67: char valor=0;
  1154     071C  1283               	bcf	3,5	;RP0=0, select bank0
  1155     071D  1303               	bcf	3,6	;RP1=0, select bank0
  1156     071E  01B0               	clrf	keypad_getkey@valor
  1157     071F                     l1087:
  1158                           
  1159                           ;KEYPAD.c: 69: for(i=0;i<4;i++){
  1160     071F  01B1               	clrf	keypad_getkey@i
  1161     0720  01B2               	clrf	keypad_getkey@i+1
  1162     0721                     l1093:
  1163                           
  1164                           ;KEYPAD.c: 71:    if(i==0){
  1165     0721  1283               	bcf	3,5	;RP0=0, select bank0
  1166     0722  1303               	bcf	3,6	;RP1=0, select bank0
  1167     0723  0831               	movf	keypad_getkey@i,w
  1168     0724  0432               	iorwf	keypad_getkey@i+1,w
  1169     0725  1D03               	btfss	3,2
  1170     0726  2F28               	goto	u381
  1171     0727  2F29               	goto	u380
  1172     0728                     u381:
  1173     0728  2F4E               	goto	l1113
  1174     0729                     u380:
  1175     0729                     l1095:
  1176                           
  1177                           ;KEYPAD.c: 73:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  1178     0729  30FE               	movlw	254
  1179     072A  0086               	movwf	6	;volatile
  1180                           
  1181                           ;KEYPAD.c: 74:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1182     072B  3042               	movlw	66
  1183     072C  00F0               	movwf	??_keypad_getkey
  1184     072D                     u677:
  1185     072D  0BF0               	decfsz	??_keypad_getkey,f
  1186     072E  2F2D               	goto	u677
  1187     072F  0000               	nop
  1188                           
  1189                           ;KEYPAD.c: 75:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  1190     0730  2F33               	goto	l1099
  1191     0731                     l1097:
  1192     0731  0820               	movf	keypad_getkey@letras,w
  1193     0732  00B0               	movwf	keypad_getkey@valor
  1194     0733                     l1099:
  1195     0733  1283               	bcf	3,5	;RP0=0, select bank0
  1196     0734  1303               	bcf	3,6	;RP1=0, select bank0
  1197     0735  1E06               	btfss	6,4	;volatile
  1198     0736  2F38               	goto	u391
  1199     0737  2F39               	goto	u390
  1200     0738                     u391:
  1201     0738  2F31               	goto	l1097
  1202     0739                     u390:
  1203     0739  2F3C               	goto	l1103
  1204     073A                     l1101:
  1205     073A  0821               	movf	keypad_getkey@letras+1,w
  1206     073B  00B0               	movwf	keypad_getkey@valor
  1207     073C                     l1103:
  1208     073C  1E86               	btfss	6,5	;volatile
  1209     073D  2F3F               	goto	u401
  1210     073E  2F40               	goto	u400
  1211     073F                     u401:
  1212     073F  2F3A               	goto	l1101
  1213     0740                     u400:
  1214     0740  2F43               	goto	l1107
  1215     0741                     l1105:
  1216     0741  0822               	movf	keypad_getkey@letras+2,w
  1217     0742  00B0               	movwf	keypad_getkey@valor
  1218     0743                     l1107:
  1219     0743  1F06               	btfss	6,6	;volatile
  1220     0744  2F46               	goto	u411
  1221     0745  2F47               	goto	u410
  1222     0746                     u411:
  1223     0746  2F41               	goto	l1105
  1224     0747                     u410:
  1225     0747  2F4A               	goto	l1111
  1226     0748                     l1109:
  1227     0748  0823               	movf	keypad_getkey@letras+3,w
  1228     0749  00B0               	movwf	keypad_getkey@valor
  1229     074A                     l1111:
  1230     074A  1F86               	btfss	6,7	;volatile
  1231     074B  2F4D               	goto	u421
  1232     074C  2F4E               	goto	u420
  1233     074D                     u421:
  1234     074D  2F48               	goto	l1109
  1235     074E                     u420:
  1236     074E                     l1113:
  1237                           
  1238                           ;KEYPAD.c: 81:    if(i==1){
  1239     074E  0331               	decf	keypad_getkey@i,w
  1240     074F  0432               	iorwf	keypad_getkey@i+1,w
  1241     0750  1D03               	btfss	3,2
  1242     0751  2F53               	goto	u431
  1243     0752  2F54               	goto	u430
  1244     0753                     u431:
  1245     0753  2F79               	goto	l1133
  1246     0754                     u430:
  1247     0754                     l1115:
  1248                           
  1249                           ;KEYPAD.c: 82:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  1250     0754  30FD               	movlw	253
  1251     0755  0086               	movwf	6	;volatile
  1252                           
  1253                           ;KEYPAD.c: 83:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1254     0756  3042               	movlw	66
  1255     0757  00F0               	movwf	??_keypad_getkey
  1256     0758                     u687:
  1257     0758  0BF0               	decfsz	??_keypad_getkey,f
  1258     0759  2F58               	goto	u687
  1259     075A  0000               	nop
  1260                           
  1261                           ;KEYPAD.c: 84:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  1262     075B  2F5E               	goto	l1119
  1263     075C                     l1117:
  1264     075C  0824               	movf	keypad_getkey@letras+4,w
  1265     075D  00B0               	movwf	keypad_getkey@valor
  1266     075E                     l1119:
  1267     075E  1283               	bcf	3,5	;RP0=0, select bank0
  1268     075F  1303               	bcf	3,6	;RP1=0, select bank0
  1269     0760  1E06               	btfss	6,4	;volatile
  1270     0761  2F63               	goto	u441
  1271     0762  2F64               	goto	u440
  1272     0763                     u441:
  1273     0763  2F5C               	goto	l1117
  1274     0764                     u440:
  1275     0764  2F67               	goto	l1123
  1276     0765                     l1121:
  1277     0765  0825               	movf	keypad_getkey@letras+5,w
  1278     0766  00B0               	movwf	keypad_getkey@valor
  1279     0767                     l1123:
  1280     0767  1E86               	btfss	6,5	;volatile
  1281     0768  2F6A               	goto	u451
  1282     0769  2F6B               	goto	u450
  1283     076A                     u451:
  1284     076A  2F65               	goto	l1121
  1285     076B                     u450:
  1286     076B  2F6E               	goto	l1127
  1287     076C                     l1125:
  1288     076C  0826               	movf	keypad_getkey@letras+6,w
  1289     076D  00B0               	movwf	keypad_getkey@valor
  1290     076E                     l1127:
  1291     076E  1F06               	btfss	6,6	;volatile
  1292     076F  2F71               	goto	u461
  1293     0770  2F72               	goto	u460
  1294     0771                     u461:
  1295     0771  2F6C               	goto	l1125
  1296     0772                     u460:
  1297     0772  2F75               	goto	l1131
  1298     0773                     l1129:
  1299     0773  0827               	movf	keypad_getkey@letras+7,w
  1300     0774  00B0               	movwf	keypad_getkey@valor
  1301     0775                     l1131:
  1302     0775  1F86               	btfss	6,7	;volatile
  1303     0776  2F78               	goto	u471
  1304     0777  2F79               	goto	u470
  1305     0778                     u471:
  1306     0778  2F73               	goto	l1129
  1307     0779                     u470:
  1308     0779                     l1133:
  1309                           
  1310                           ;KEYPAD.c: 90:    if(i==2){
  1311     0779  3002               	movlw	2
  1312     077A  0631               	xorwf	keypad_getkey@i,w
  1313     077B  0432               	iorwf	keypad_getkey@i+1,w
  1314     077C  1D03               	btfss	3,2
  1315     077D  2F7F               	goto	u481
  1316     077E  2F80               	goto	u480
  1317     077F                     u481:
  1318     077F  2FA5               	goto	l1153
  1319     0780                     u480:
  1320     0780                     l1135:
  1321                           
  1322                           ;KEYPAD.c: 91:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  1323     0780  30FB               	movlw	251
  1324     0781  0086               	movwf	6	;volatile
  1325                           
  1326                           ;KEYPAD.c: 92:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1327     0782  3042               	movlw	66
  1328     0783  00F0               	movwf	??_keypad_getkey
  1329     0784                     u697:
  1330     0784  0BF0               	decfsz	??_keypad_getkey,f
  1331     0785  2F84               	goto	u697
  1332     0786  0000               	nop
  1333                           
  1334                           ;KEYPAD.c: 93:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  1335     0787  2F8A               	goto	l1139
  1336     0788                     l1137:
  1337     0788  0828               	movf	keypad_getkey@letras+8,w
  1338     0789  00B0               	movwf	keypad_getkey@valor
  1339     078A                     l1139:
  1340     078A  1283               	bcf	3,5	;RP0=0, select bank0
  1341     078B  1303               	bcf	3,6	;RP1=0, select bank0
  1342     078C  1E06               	btfss	6,4	;volatile
  1343     078D  2F8F               	goto	u491
  1344     078E  2F90               	goto	u490
  1345     078F                     u491:
  1346     078F  2F88               	goto	l1137
  1347     0790                     u490:
  1348     0790  2F93               	goto	l1143
  1349     0791                     l1141:
  1350     0791  0829               	movf	keypad_getkey@letras+9,w
  1351     0792  00B0               	movwf	keypad_getkey@valor
  1352     0793                     l1143:
  1353     0793  1E86               	btfss	6,5	;volatile
  1354     0794  2F96               	goto	u501
  1355     0795  2F97               	goto	u500
  1356     0796                     u501:
  1357     0796  2F91               	goto	l1141
  1358     0797                     u500:
  1359     0797  2F9A               	goto	l1147
  1360     0798                     l1145:
  1361     0798  082A               	movf	keypad_getkey@letras+10,w
  1362     0799  00B0               	movwf	keypad_getkey@valor
  1363     079A                     l1147:
  1364     079A  1F06               	btfss	6,6	;volatile
  1365     079B  2F9D               	goto	u511
  1366     079C  2F9E               	goto	u510
  1367     079D                     u511:
  1368     079D  2F98               	goto	l1145
  1369     079E                     u510:
  1370     079E  2FA1               	goto	l1151
  1371     079F                     l1149:
  1372     079F  082B               	movf	keypad_getkey@letras+11,w
  1373     07A0  00B0               	movwf	keypad_getkey@valor
  1374     07A1                     l1151:
  1375     07A1  1F86               	btfss	6,7	;volatile
  1376     07A2  2FA4               	goto	u521
  1377     07A3  2FA5               	goto	u520
  1378     07A4                     u521:
  1379     07A4  2F9F               	goto	l1149
  1380     07A5                     u520:
  1381     07A5                     l1153:
  1382                           
  1383                           ;KEYPAD.c: 99:    if(i==3){
  1384     07A5  3003               	movlw	3
  1385     07A6  0631               	xorwf	keypad_getkey@i,w
  1386     07A7  0432               	iorwf	keypad_getkey@i+1,w
  1387     07A8  1D03               	btfss	3,2
  1388     07A9  2FAB               	goto	u531
  1389     07AA  2FAC               	goto	u530
  1390     07AB                     u531:
  1391     07AB  2FD1               	goto	l1173
  1392     07AC                     u530:
  1393     07AC                     l1155:
  1394                           
  1395                           ;KEYPAD.c: 100:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  1396     07AC  30F7               	movlw	247
  1397     07AD  0086               	movwf	6	;volatile
  1398                           
  1399                           ;KEYPAD.c: 101:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1400     07AE  3042               	movlw	66
  1401     07AF  00F0               	movwf	??_keypad_getkey
  1402     07B0                     u707:
  1403     07B0  0BF0               	decfsz	??_keypad_getkey,f
  1404     07B1  2FB0               	goto	u707
  1405     07B2  0000               	nop
  1406                           
  1407                           ;KEYPAD.c: 102:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  1408     07B3  2FB6               	goto	l1159
  1409     07B4                     l1157:
  1410     07B4  082C               	movf	keypad_getkey@letras+12,w
  1411     07B5  00B0               	movwf	keypad_getkey@valor
  1412     07B6                     l1159:
  1413     07B6  1283               	bcf	3,5	;RP0=0, select bank0
  1414     07B7  1303               	bcf	3,6	;RP1=0, select bank0
  1415     07B8  1E06               	btfss	6,4	;volatile
  1416     07B9  2FBB               	goto	u541
  1417     07BA  2FBC               	goto	u540
  1418     07BB                     u541:
  1419     07BB  2FB4               	goto	l1157
  1420     07BC                     u540:
  1421     07BC  2FBF               	goto	l1163
  1422     07BD                     l1161:
  1423     07BD  082D               	movf	keypad_getkey@letras+13,w
  1424     07BE  00B0               	movwf	keypad_getkey@valor
  1425     07BF                     l1163:
  1426     07BF  1E86               	btfss	6,5	;volatile
  1427     07C0  2FC2               	goto	u551
  1428     07C1  2FC3               	goto	u550
  1429     07C2                     u551:
  1430     07C2  2FBD               	goto	l1161
  1431     07C3                     u550:
  1432     07C3  2FC6               	goto	l1167
  1433     07C4                     l1165:
  1434     07C4  082E               	movf	keypad_getkey@letras+14,w
  1435     07C5  00B0               	movwf	keypad_getkey@valor
  1436     07C6                     l1167:
  1437     07C6  1F06               	btfss	6,6	;volatile
  1438     07C7  2FC9               	goto	u561
  1439     07C8  2FCA               	goto	u560
  1440     07C9                     u561:
  1441     07C9  2FC4               	goto	l1165
  1442     07CA                     u560:
  1443     07CA  2FCD               	goto	l1171
  1444     07CB                     l1169:
  1445     07CB  082F               	movf	keypad_getkey@letras+15,w
  1446     07CC  00B0               	movwf	keypad_getkey@valor
  1447     07CD                     l1171:
  1448     07CD  1F86               	btfss	6,7	;volatile
  1449     07CE  2FD0               	goto	u571
  1450     07CF  2FD1               	goto	u570
  1451     07D0                     u571:
  1452     07D0  2FCB               	goto	l1169
  1453     07D1                     u570:
  1454     07D1                     l1173:
  1455                           
  1456                           ;KEYPAD.c: 107:    }
  1457     07D1  3001               	movlw	1
  1458     07D2  07B1               	addwf	keypad_getkey@i,f
  1459     07D3  1803               	skipnc
  1460     07D4  0AB2               	incf	keypad_getkey@i+1,f
  1461     07D5  3000               	movlw	0
  1462     07D6  07B2               	addwf	keypad_getkey@i+1,f
  1463     07D7                     l1175:
  1464     07D7  0832               	movf	keypad_getkey@i+1,w
  1465     07D8  3A80               	xorlw	128
  1466     07D9  00FF               	movwf	btemp+1
  1467     07DA  3080               	movlw	128
  1468     07DB  027F               	subwf	btemp+1,w
  1469     07DC  1D03               	skipz
  1470     07DD  2FE0               	goto	u585
  1471     07DE  3004               	movlw	4
  1472     07DF  0231               	subwf	keypad_getkey@i,w
  1473     07E0                     u585:
  1474     07E0  1C03               	skipc
  1475     07E1  2FE3               	goto	u581
  1476     07E2  2FE4               	goto	u580
  1477     07E3                     u581:
  1478     07E3  2F21               	goto	l1093
  1479     07E4                     u580:
  1480     07E4                     l1177:
  1481                           
  1482                           ;KEYPAD.c: 109:    return valor;
  1483     07E4  1283               	bcf	3,5	;RP0=0, select bank0
  1484     07E5  1303               	bcf	3,6	;RP1=0, select bank0
  1485     07E6  0830               	movf	keypad_getkey@valor,w
  1486     07E7                     l150:
  1487     07E7  0008               	return
  1488     07E8                     __end_of_keypad_getkey:
  1489                           
  1490                           	psect	text4
  1491     0577                     __ptext4:	
  1492 ;; *************** function _LCD_String_xy *****************
  1493 ;; Defined at:
  1494 ;;		line 115 in file "LCD.c"
  1495 ;; Parameters:    Size  Location     Type
  1496 ;;  row             1    wreg     unsigned char 
  1497 ;;  pos             1    4[COMMON] unsigned char 
  1498 ;;  msg             1    5[COMMON] PTR const unsigned char 
  1499 ;;		 -> STR_3(17), STR_2(15), STR_1(22), 
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  row             1    6[COMMON] unsigned char 
  1502 ;;  location        1    7[COMMON] unsigned char 
  1503 ;; Return value:  Size  Location     Type
  1504 ;;                  1    wreg      void 
  1505 ;; Registers used:
  1506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1507 ;; Tracked objects:
  1508 ;;		On entry : 0/0
  1509 ;;		On exit  : 0/0
  1510 ;;		Unchanged: 0/0
  1511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1512 ;;      Params:         2       0       0       0       0
  1513 ;;      Locals:         2       0       0       0       0
  1514 ;;      Temps:          0       0       0       0       0
  1515 ;;      Totals:         4       0       0       0       0
  1516 ;;Total ram usage:        4 bytes
  1517 ;; Hardware stack levels used: 1
  1518 ;; Hardware stack levels required when called: 2
  1519 ;; This function calls:
  1520 ;;		_LCD_Command
  1521 ;;		_LCD_String
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527     0577                     _LCD_String_xy:	
  1528                           ;psect for function _LCD_String_xy
  1529                           
  1530                           
  1531                           ;incstack = 0
  1532                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1533                           ;LCD_String_xy@row stored from wreg
  1534     0577  00F6               	movwf	LCD_String_xy@row
  1535     0578                     l1067:
  1536     0578                     l1069:
  1537                           
  1538                           ;LCD.c: 118:     if(row<=1)
  1539     0578  3002               	movlw	2
  1540     0579  0276               	subwf	LCD_String_xy@row,w
  1541     057A  1803               	skipnc
  1542     057B  2D7D               	goto	u361
  1543     057C  2D7E               	goto	u360
  1544     057D                     u361:
  1545     057D  2D89               	goto	l1075
  1546     057E                     u360:
  1547     057E                     l1071:
  1548                           
  1549                           ;LCD.c: 119:     {;LCD.c: 120:         location=(0x80) | ((pos) & 0x0f);
  1550     057E  0874               	movf	LCD_String_xy@pos,w
  1551     057F  390F               	andlw	15
  1552     0580  3880               	iorlw	128
  1553     0581  00F7               	movwf	LCD_String_xy@location
  1554     0582                     l1073:
  1555                           
  1556                           ;LCD.c: 121:         LCD_Command(location);
  1557     0582  0877               	movf	LCD_String_xy@location,w
  1558     0583  120A  118A  25C4  120A  118A  	fcall	_LCD_Command
  1559                           
  1560                           ;LCD.c: 122:     }
  1561     0588  2D93               	goto	l1079
  1562     0589                     l1075:
  1563                           
  1564                           ;LCD.c: 124:     {;LCD.c: 125:         location=(0xC0) | ((pos) & 0x0f);
  1565     0589  0874               	movf	LCD_String_xy@pos,w
  1566     058A  390F               	andlw	15
  1567     058B  38C0               	iorlw	192
  1568     058C  00F7               	movwf	LCD_String_xy@location
  1569     058D                     l1077:
  1570                           
  1571                           ;LCD.c: 126:         LCD_Command(location);
  1572     058D  0877               	movf	LCD_String_xy@location,w
  1573     058E  120A  118A  25C4  120A  118A  	fcall	_LCD_Command
  1574     0593                     l1079:
  1575                           
  1576                           ;LCD.c: 130:     LCD_String(msg);
  1577     0593  0875               	movf	LCD_String_xy@msg,w
  1578     0594  120A  118A  2558  120A  118A  	fcall	_LCD_String
  1579     0599                     l73:
  1580     0599  0008               	return
  1581     059A                     __end_of_LCD_String_xy:
  1582                           
  1583                           	psect	text5
  1584     0558                     __ptext5:	
  1585 ;; *************** function _LCD_String *****************
  1586 ;; Defined at:
  1587 ;;		line 105 in file "LCD.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  msg             1    wreg     PTR const unsigned char 
  1590 ;;		 -> STR_3(17), STR_2(15), STR_1(22), 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  msg             1    3[COMMON] PTR const unsigned char 
  1593 ;;		 -> STR_3(17), STR_2(15), STR_1(22), 
  1594 ;; Return value:  Size  Location     Type
  1595 ;;                  1    wreg      void 
  1596 ;; Registers used:
  1597 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1598 ;; Tracked objects:
  1599 ;;		On entry : 0/0
  1600 ;;		On exit  : 0/0
  1601 ;;		Unchanged: 0/0
  1602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1603 ;;      Params:         0       0       0       0       0
  1604 ;;      Locals:         1       0       0       0       0
  1605 ;;      Temps:          0       0       0       0       0
  1606 ;;      Totals:         1       0       0       0       0
  1607 ;;Total ram usage:        1 bytes
  1608 ;; Hardware stack levels used: 1
  1609 ;; Hardware stack levels required when called: 1
  1610 ;; This function calls:
  1611 ;;		_LCD_Char
  1612 ;; This function is called by:
  1613 ;;		_LCD_String_xy
  1614 ;; This function uses a non-reentrant model
  1615 ;;
  1616                           
  1617     0558                     _LCD_String:	
  1618                           ;psect for function _LCD_String
  1619                           
  1620                           
  1621                           ;incstack = 0
  1622                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1623                           ;LCD_String@msg stored from wreg
  1624     0558  00F3               	movwf	LCD_String@msg
  1625     0559                     l1037:
  1626                           
  1627                           ;LCD.c: 105: void LCD_String(const char *msg);LCD.c: 106: {;LCD.c: 107:  while((*msg)!=0
      +                          )
  1628     0559  2D6A               	goto	l1043
  1629     055A                     l1039:
  1630                           
  1631                           ;LCD.c: 108:  {;LCD.c: 109:    LCD_Char(*msg);
  1632     055A  0873               	movf	LCD_String@msg,w
  1633     055B  0084               	movwf	4
  1634     055C  120A  118A  2003  120A  118A  	fcall	stringdir
  1635     0561  120A  118A  25FA  120A  118A  	fcall	_LCD_Char
  1636     0566                     l1041:
  1637                           
  1638                           ;LCD.c: 110:    msg++;
  1639     0566  3001               	movlw	1
  1640     0567  00FF               	movwf	btemp+1
  1641     0568  087F               	movf	btemp+1,w
  1642     0569  07F3               	addwf	LCD_String@msg,f
  1643     056A                     l1043:
  1644                           
  1645                           ;LCD.c: 107:  while((*msg)!=0)
  1646     056A  0873               	movf	LCD_String@msg,w
  1647     056B  0084               	movwf	4
  1648     056C  120A  118A  2003  120A  118A  	fcall	stringdir
  1649     0571  3A00               	xorlw	0
  1650     0572  1D03               	skipz
  1651     0573  2D75               	goto	u351
  1652     0574  2D76               	goto	u350
  1653     0575                     u351:
  1654     0575  2D5A               	goto	l1039
  1655     0576                     u350:
  1656     0576                     l68:
  1657     0576  0008               	return
  1658     0577                     __end_of_LCD_String:
  1659                           
  1660                           	psect	text6
  1661     05FA                     __ptext6:	
  1662 ;; *************** function _LCD_Char *****************
  1663 ;; Defined at:
  1664 ;;		line 90 in file "LCD.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  dat             1    wreg     unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  dat             1    2[COMMON] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       0       0       0       0
  1679 ;;      Locals:         1       0       0       0       0
  1680 ;;      Temps:          2       0       0       0       0
  1681 ;;      Totals:         3       0       0       0       0
  1682 ;;Total ram usage:        3 bytes
  1683 ;; Hardware stack levels used: 1
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;;		_LCD_String
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692     05FA                     _LCD_Char:	
  1693                           ;psect for function _LCD_Char
  1694                           
  1695                           
  1696                           ;incstack = 0
  1697                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  1698                           ;LCD_Char@dat stored from wreg
  1699     05FA  00F2               	movwf	LCD_Char@dat
  1700     05FB                     l997:
  1701                           
  1702                           ;LCD.c: 90: void LCD_Char(unsigned char dat);LCD.c: 91: {;LCD.c: 92:  PORTD = (PORTD & 0
      +                          x0f) | (0xF0 & dat);
  1703     05FB  30F0               	movlw	240
  1704     05FC  0572               	andwf	LCD_Char@dat,w
  1705     05FD  00F0               	movwf	??_LCD_Char
  1706     05FE  1283               	bcf	3,5	;RP0=0, select bank0
  1707     05FF  1303               	bcf	3,6	;RP1=0, select bank0
  1708     0600  0808               	movf	8,w	;volatile
  1709     0601  390F               	andlw	15
  1710     0602  0470               	iorwf	??_LCD_Char,w
  1711     0603  0088               	movwf	8	;volatile
  1712     0604                     l999:
  1713                           
  1714                           ;LCD.c: 93:  RD0 = 1;
  1715     0604  1408               	bsf	8,0	;volatile
  1716     0605                     l1001:
  1717                           
  1718                           ;LCD.c: 94:  RD1 = 1;
  1719     0605  1488               	bsf	8,1	;volatile
  1720     0606                     l1003:
  1721                           
  1722                           ;LCD.c: 95:  __nop();
  1723     0606  0000               	nop
  1724     0607                     l1005:
  1725                           
  1726                           ;LCD.c: 96:  RD1 = 0;
  1727     0607  1283               	bcf	3,5	;RP0=0, select bank0
  1728     0608  1303               	bcf	3,6	;RP1=0, select bank0
  1729     0609  1088               	bcf	8,1	;volatile
  1730     060A                     l1007:
  1731                           
  1732                           ;LCD.c: 97:  _delay((unsigned long)((1)*(8000000/4000.0)));
  1733     060A  3003               	movlw	3
  1734     060B  00F1               	movwf	??_LCD_Char+1
  1735     060C  3097               	movlw	151
  1736     060D  00F0               	movwf	??_LCD_Char
  1737     060E                     u717:
  1738     060E  0BF0               	decfsz	??_LCD_Char,f
  1739     060F  2E0E               	goto	u717
  1740     0610  0BF1               	decfsz	??_LCD_Char+1,f
  1741     0611  2E0E               	goto	u717
  1742     0612  2E13               	nop2
  1743     0613                     l1009:
  1744                           
  1745                           ;LCD.c: 98:     PORTD = (unsigned char)((PORTD & 0x0f) | (dat<<4));
  1746     0613  0872               	movf	LCD_Char@dat,w
  1747     0614  00F0               	movwf	??_LCD_Char
  1748     0615  3004               	movlw	4
  1749     0616                     u335:
  1750     0616  1003               	clrc
  1751     0617  0DF0               	rlf	??_LCD_Char,f
  1752     0618  3EFF               	addlw	-1
  1753     0619  1D03               	skipz
  1754     061A  2E16               	goto	u335
  1755     061B  1283               	bcf	3,5	;RP0=0, select bank0
  1756     061C  1303               	bcf	3,6	;RP1=0, select bank0
  1757     061D  0808               	movf	8,w	;volatile
  1758     061E  390F               	andlw	15
  1759     061F  0470               	iorwf	??_LCD_Char,w
  1760     0620  0088               	movwf	8	;volatile
  1761     0621                     l1011:
  1762                           
  1763                           ;LCD.c: 99:  RD1 = 1;
  1764     0621  1488               	bsf	8,1	;volatile
  1765     0622                     l1013:
  1766                           
  1767                           ;LCD.c: 100:  __nop();
  1768     0622  0000               	nop
  1769     0623                     l1015:
  1770                           
  1771                           ;LCD.c: 101:  RD1 = 0;
  1772     0623  1283               	bcf	3,5	;RP0=0, select bank0
  1773     0624  1303               	bcf	3,6	;RP1=0, select bank0
  1774     0625  1088               	bcf	8,1	;volatile
  1775                           
  1776                           ;LCD.c: 102:  _delay((unsigned long)((3)*(8000000/4000.0)));
  1777     0626  3008               	movlw	8
  1778     0627  00F1               	movwf	??_LCD_Char+1
  1779     0628  30C9               	movlw	201
  1780     0629  00F0               	movwf	??_LCD_Char
  1781     062A                     u727:
  1782     062A  0BF0               	decfsz	??_LCD_Char,f
  1783     062B  2E2A               	goto	u727
  1784     062C  0BF1               	decfsz	??_LCD_Char+1,f
  1785     062D  2E2A               	goto	u727
  1786     062E  2E2F               	nop2
  1787     062F                     l62:
  1788     062F  0008               	return
  1789     0630                     __end_of_LCD_Char:
  1790                           
  1791                           	psect	text7
  1792     059A                     __ptext7:	
  1793 ;; *************** function _LCD_Init *****************
  1794 ;; Defined at:
  1795 ;;		line 37 in file "LCD.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;		None
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0, pclath, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         0       0       0       0       0
  1810 ;;      Locals:         0       0       0       0       0
  1811 ;;      Temps:          2       0       0       0       0
  1812 ;;      Totals:         2       0       0       0       0
  1813 ;;Total ram usage:        2 bytes
  1814 ;; Hardware stack levels used: 1
  1815 ;; Hardware stack levels required when called: 1
  1816 ;; This function calls:
  1817 ;;		_LCD_Command
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823     059A                     _LCD_Init:	
  1824                           ;psect for function _LCD_Init
  1825                           
  1826     059A                     l1045:	
  1827                           ;incstack = 0
  1828                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  1829                           
  1830                           
  1831                           ;LCD.c: 39:     TRISD = 0;
  1832     059A  1683               	bsf	3,5	;RP0=1, select bank1
  1833     059B  1303               	bcf	3,6	;RP1=0, select bank1
  1834     059C  0188               	clrf	8	;volatile
  1835     059D                     l1047:
  1836                           
  1837                           ;LCD.c: 40:     _delay((unsigned long)((15)*(8000000/4000.0)));
  1838     059D  3027               	movlw	39
  1839     059E  00F4               	movwf	??_LCD_Init+1
  1840     059F  30F5               	movlw	245
  1841     05A0  00F3               	movwf	??_LCD_Init
  1842     05A1                     u737:
  1843     05A1  0BF3               	decfsz	??_LCD_Init,f
  1844     05A2  2DA1               	goto	u737
  1845     05A3  0BF4               	decfsz	??_LCD_Init+1,f
  1846     05A4  2DA1               	goto	u737
  1847     05A5                     l1049:
  1848                           
  1849                           ;LCD.c: 41:     LCD_Command(0x02);
  1850     05A5  3002               	movlw	2
  1851     05A6  120A  118A  25C4  120A  118A  	fcall	_LCD_Command
  1852     05AB                     l1051:
  1853                           
  1854                           ;LCD.c: 42:     LCD_Command(0x28);
  1855     05AB  3028               	movlw	40
  1856     05AC  120A  118A  25C4  120A  118A  	fcall	_LCD_Command
  1857     05B1                     l1053:
  1858                           
  1859                           ;LCD.c: 43:     LCD_Command(0x01);
  1860     05B1  3001               	movlw	1
  1861     05B2  120A  118A  25C4  120A  118A  	fcall	_LCD_Command
  1862     05B7                     l1055:
  1863                           
  1864                           ;LCD.c: 44:     LCD_Command(0x0c);
  1865     05B7  300C               	movlw	12
  1866     05B8  120A  118A  25C4  120A  118A  	fcall	_LCD_Command
  1867     05BD                     l1057:
  1868                           
  1869                           ;LCD.c: 45:     LCD_Command(0x06);
  1870     05BD  3006               	movlw	6
  1871     05BE  120A  118A  25C4  120A  118A  	fcall	_LCD_Command
  1872     05C3                     l56:
  1873     05C3  0008               	return
  1874     05C4                     __end_of_LCD_Init:
  1875                           
  1876                           	psect	text8
  1877     0514                     __ptext8:	
  1878 ;; *************** function _LCD_Clear *****************
  1879 ;; Defined at:
  1880 ;;		line 146 in file "LCD.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;		None
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      void 
  1887 ;; Registers used:
  1888 ;;		wreg, status,2, status,0, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0
  1896 ;;      Temps:          2       0       0       0       0
  1897 ;;      Totals:         2       0       0       0       0
  1898 ;;Total ram usage:        2 bytes
  1899 ;; Hardware stack levels used: 1
  1900 ;; Hardware stack levels required when called: 1
  1901 ;; This function calls:
  1902 ;;		_LCD_Command
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908     0514                     _LCD_Clear:	
  1909                           ;psect for function _LCD_Clear
  1910                           
  1911     0514                     l1199:	
  1912                           ;incstack = 0
  1913                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  1914                           
  1915                           
  1916                           ;LCD.c: 148:     LCD_Command(0x01);
  1917     0514  3001               	movlw	1
  1918     0515  120A  118A  25C4  120A  118A  	fcall	_LCD_Command
  1919     051A                     l1201:
  1920                           
  1921                           ;LCD.c: 149:     _delay((unsigned long)((3)*(8000000/4000.0)));
  1922     051A  3008               	movlw	8
  1923     051B  00F4               	movwf	??_LCD_Clear+1
  1924     051C  30C9               	movlw	201
  1925     051D  00F3               	movwf	??_LCD_Clear
  1926     051E                     u747:
  1927     051E  0BF3               	decfsz	??_LCD_Clear,f
  1928     051F  2D1E               	goto	u747
  1929     0520  0BF4               	decfsz	??_LCD_Clear+1,f
  1930     0521  2D1E               	goto	u747
  1931     0522  2D23               	nop2
  1932     0523                     l76:
  1933     0523  0008               	return
  1934     0524                     __end_of_LCD_Clear:
  1935                           
  1936                           	psect	text9
  1937     05C4                     __ptext9:	
  1938 ;; *************** function _LCD_Command *****************
  1939 ;; Defined at:
  1940 ;;		line 61 in file "LCD.c"
  1941 ;; Parameters:    Size  Location     Type
  1942 ;;  cmd             1    wreg     unsigned char 
  1943 ;; Auto vars:     Size  Location     Type
  1944 ;;  cmd             1    2[COMMON] unsigned char 
  1945 ;; Return value:  Size  Location     Type
  1946 ;;                  1    wreg      void 
  1947 ;; Registers used:
  1948 ;;		wreg, status,2, status,0
  1949 ;; Tracked objects:
  1950 ;;		On entry : 0/0
  1951 ;;		On exit  : 0/0
  1952 ;;		Unchanged: 0/0
  1953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1954 ;;      Params:         0       0       0       0       0
  1955 ;;      Locals:         1       0       0       0       0
  1956 ;;      Temps:          2       0       0       0       0
  1957 ;;      Totals:         3       0       0       0       0
  1958 ;;Total ram usage:        3 bytes
  1959 ;; Hardware stack levels used: 1
  1960 ;; This function calls:
  1961 ;;		Nothing
  1962 ;; This function is called by:
  1963 ;;		_main
  1964 ;;		_LCD_Init
  1965 ;;		_LCD_String_xy
  1966 ;;		_LCD_Clear
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970     05C4                     _LCD_Command:	
  1971                           ;psect for function _LCD_Command
  1972                           
  1973                           
  1974                           ;incstack = 0
  1975                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  1976                           ;LCD_Command@cmd stored from wreg
  1977     05C4  00F2               	movwf	LCD_Command@cmd
  1978     05C5                     l1017:
  1979                           
  1980                           ;LCD.c: 61: void LCD_Command(unsigned char cmd );LCD.c: 62: {;LCD.c: 63:  PORTD = (PORTD
      +                           & 0x0f) |(0xF0 & cmd);
  1981     05C5  30F0               	movlw	240
  1982     05C6  0572               	andwf	LCD_Command@cmd,w
  1983     05C7  00F0               	movwf	??_LCD_Command
  1984     05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1985     05C9  1303               	bcf	3,6	;RP1=0, select bank0
  1986     05CA  0808               	movf	8,w	;volatile
  1987     05CB  390F               	andlw	15
  1988     05CC  0470               	iorwf	??_LCD_Command,w
  1989     05CD  0088               	movwf	8	;volatile
  1990     05CE                     l1019:
  1991                           
  1992                           ;LCD.c: 64:  RD0 = 0;
  1993     05CE  1008               	bcf	8,0	;volatile
  1994     05CF                     l1021:
  1995                           
  1996                           ;LCD.c: 65:  RD1 = 1;
  1997     05CF  1488               	bsf	8,1	;volatile
  1998     05D0                     l1023:
  1999                           
  2000                           ;LCD.c: 66:  __nop();
  2001     05D0  0000               	nop
  2002     05D1                     l1025:
  2003                           
  2004                           ;LCD.c: 67:  RD1 = 0;
  2005     05D1  1283               	bcf	3,5	;RP0=0, select bank0
  2006     05D2  1303               	bcf	3,6	;RP1=0, select bank0
  2007     05D3  1088               	bcf	8,1	;volatile
  2008     05D4                     l1027:
  2009                           
  2010                           ;LCD.c: 68:  _delay((unsigned long)((1)*(8000000/4000.0)));
  2011     05D4  3003               	movlw	3
  2012     05D5  00F1               	movwf	??_LCD_Command+1
  2013     05D6  3097               	movlw	151
  2014     05D7  00F0               	movwf	??_LCD_Command
  2015     05D8                     u757:
  2016     05D8  0BF0               	decfsz	??_LCD_Command,f
  2017     05D9  2DD8               	goto	u757
  2018     05DA  0BF1               	decfsz	??_LCD_Command+1,f
  2019     05DB  2DD8               	goto	u757
  2020     05DC  2DDD               	nop2
  2021     05DD                     l1029:
  2022                           
  2023                           ;LCD.c: 69:     PORTD = (unsigned char)((PORTD & 0x0f) | (cmd<<4));
  2024     05DD  0872               	movf	LCD_Command@cmd,w
  2025     05DE  00F0               	movwf	??_LCD_Command
  2026     05DF  3004               	movlw	4
  2027     05E0                     u345:
  2028     05E0  1003               	clrc
  2029     05E1  0DF0               	rlf	??_LCD_Command,f
  2030     05E2  3EFF               	addlw	-1
  2031     05E3  1D03               	skipz
  2032     05E4  2DE0               	goto	u345
  2033     05E5  1283               	bcf	3,5	;RP0=0, select bank0
  2034     05E6  1303               	bcf	3,6	;RP1=0, select bank0
  2035     05E7  0808               	movf	8,w	;volatile
  2036     05E8  390F               	andlw	15
  2037     05E9  0470               	iorwf	??_LCD_Command,w
  2038     05EA  0088               	movwf	8	;volatile
  2039     05EB                     l1031:
  2040                           
  2041                           ;LCD.c: 70:  RD1 = 1;
  2042     05EB  1488               	bsf	8,1	;volatile
  2043     05EC                     l1033:
  2044                           
  2045                           ;LCD.c: 71:  __nop();
  2046     05EC  0000               	nop
  2047     05ED                     l1035:
  2048                           
  2049                           ;LCD.c: 72:  RD1 = 0;
  2050     05ED  1283               	bcf	3,5	;RP0=0, select bank0
  2051     05EE  1303               	bcf	3,6	;RP1=0, select bank0
  2052     05EF  1088               	bcf	8,1	;volatile
  2053                           
  2054                           ;LCD.c: 73:  _delay((unsigned long)((3)*(8000000/4000.0)));
  2055     05F0  3008               	movlw	8
  2056     05F1  00F1               	movwf	??_LCD_Command+1
  2057     05F2  30C9               	movlw	201
  2058     05F3  00F0               	movwf	??_LCD_Command
  2059     05F4                     u767:
  2060     05F4  0BF0               	decfsz	??_LCD_Command,f
  2061     05F5  2DF4               	goto	u767
  2062     05F6  0BF1               	decfsz	??_LCD_Command+1,f
  2063     05F7  2DF4               	goto	u767
  2064     05F8  2DF9               	nop2
  2065     05F9                     l59:
  2066     05F9  0008               	return
  2067     05FA                     __end_of_LCD_Command:
  2068     007E                     btemp	set	126	;btemp
  2069     007E                     wtemp0	set	126
  2070                           
  2071                           	psect	config
  2072                           
  2073                           ;Config register CONFIG1 @ 0x2007
  2074                           ;	Oscillator Selection bits
  2075                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  2076                           ;	Watchdog Timer Enable bit
  2077                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2078                           ;	Power-up Timer Enable bit
  2079                           ;	PWRTE = OFF, PWRT disabled
  2080                           ;	RE3/MCLR pin function select bit
  2081                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2082                           ;	Code Protection bit
  2083                           ;	CP = OFF, Program memory code protection is disabled
  2084                           ;	Data Code Protection bit
  2085                           ;	CPD = OFF, Data memory code protection is disabled
  2086                           ;	Brown Out Reset Selection bits
  2087                           ;	BOREN = OFF, BOR disabled
  2088                           ;	Internal External Switchover bit
  2089                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2090                           ;	Fail-Safe Clock Monitor Enabled bit
  2091                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2092                           ;	Low Voltage Programming Enable bit
  2093                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2094                           ;	In-Circuit Debugger Mode bit
  2095                           ;	DEBUG = 0x1, unprogrammed default
  2096     2007                     	org	8199
  2097     2007  20D5               	dw	8405
  2098                           
  2099                           ;Config register CONFIG2 @ 0x2008
  2100                           ;	Brown-out Reset Selection bit
  2101                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2102                           ;	Flash Program Memory Self Write Enable bits
  2103                           ;	WRT = OFF, Write protection off
  2104     2008                     	org	8200
  2105     2008  3FFF               	dw	16383

Data Sizes:
    Strings     54
    Constant    5
    Data        16
    BSS         6
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     19      40
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> password(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 5
		 -> pass_user(BANK0[5]), 

    LCD_String_xy@msg	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_3(CODE[17]), STR_2(CODE[15]), STR_1(CODE[22]), 

    LCD_String@msg	PTR const unsigned char  size(1) Largest target is 22
		 -> STR_3(CODE[17]), STR_2(CODE[15]), STR_1(CODE[22]), 


Critical Paths under _main in COMMON

    _main->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Init->_LCD_Command
    _LCD_Clear->_LCD_Command

Critical Paths under _main in BANK0

    _main->_keypad_getkey

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1862
                                              8 COMMON     4     4      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                           _LCD_Init
                      _LCD_String_xy
                      _keypad_getkey
                        _keypad_init
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              6     3      3     319
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _keypad_getkey                                       23    23      0     542
                                              0 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String_xy                                        4     2      2     757
                                              4 COMMON     4     2      2
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (2) _LCD_String                                           1     1      0     122
                                              3 COMMON     1     1      0
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Char
   _LCD_Clear
     _LCD_Command
   _LCD_Command
   _LCD_Init
     _LCD_Command
   _LCD_String_xy
     _LCD_Command
     _LCD_String
       _LCD_Char
   _keypad_getkey
   _keypad_init
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     13      28       5       50.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      35      12        0.0%
ABS                  0      0      35       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Sep 22 16:05:21 2023

                      pc 0002             ?_LCD_Command 0070                       l62 062F  
                     l56 05C3                       l73 0599                       l59 05F9  
                     l91 0544                       l76 0523                       l68 0576  
                     fsr 0004              ?_LCD_String 0070                      l150 07E7  
                    l692 0675                      l997 05FB                      l999 0604  
                    _RD0 0040                      _RD1 0041                      u400 0740  
                    u401 073F                      u410 0747                      u411 0746  
                    u500 0797                      u420 074E                      u501 0796  
                    u421 074D                      u350 0576                      u510 079E  
                    u430 0754                      u335 0616                      u351 0575  
                    u511 079D                      u431 0753                      u360 057E  
                    u520 07A5                      u440 0764                      u600 064A  
                    u345 05E0                      u361 057D                      u521 07A4  
                    u441 0763                      u601 0649                      u530 07AC  
                    u450 076B                      u370 070F                      u610 0673  
                    u531 07AB                      u451 076A                      u611 0672  
                    u540 07BC                      u460 0772                      u380 0729  
                    u620 069E                      u541 07BB                      u461 0771  
                    u381 0728                      u621 069D                      u550 07C3  
                    u470 0779                      u390 0739                      u630 06C1  
                    u551 07C2                      u471 0778                      u391 0738  
                    u631 06C0                      u560 07CA                      u480 0780  
                    u640 06D3                      u561 07C9                      u481 077F  
                    u641 06D2                      u570 07D1                      u490 0790  
                    u571 07D0                      u707 07B0                      u491 078F  
                    u580 07E4                      u717 060E                      u581 07E3  
                    u590 063A                      u727 062A                      u591 0639  
                    u737 05A1                      u585 07E0                      u657 06B4  
                    u747 051E                      u667 06F6                      u757 05D8  
                    u677 072D                      u767 05F4                      u687 0758  
                    u697 0784                      _idx 007C                      fsr0 0004  
                    indf 0000              LCD_Char@dat 0072                     l1001 0605  
                   l1011 0621                     l1003 0606                     l1021 05CF  
                   l1013 0622                     l1005 0607                     l1101 073A  
                   l1031 05EB                     l1023 05D0                     l1015 0623  
                   l1007 060A                     l1111 074A                     l1103 073C  
                   l1033 05EC                     l1025 05D1                     l1017 05C5  
                   l1201 051A                     l1009 0613                     l1041 0566  
                   l1121 0765                     l1105 0741                     l1113 074E  
                   l1035 05ED                     l1027 05D4                     l1019 05CE  
                   l1051 05AB                     l1043 056A                     l1131 0775  
                   l1123 0767                     l1115 0754                     l1107 0743  
                   l1211 068D                     l1203 0676                     l1029 05DD  
                   l1053 05B1                     l1045 059A                     l1037 0559  
                   l1141 0791                     l1125 076C                     l1117 075C  
                   l1133 0779                     l1109 0748                     l1061 053E  
                   l1221 06AA                     l1213 0693                     l1205 067A  
                   l1055 05B7                     l1047 059D                     l1039 055A  
                   l1071 057E                     l1151 07A1                     l1143 0793  
                   l1135 0780                     l1127 076E                     l1119 075E  
                   l1063 053F                     l1231 06D8                     l1223 06AE  
                   l1215 0699                     l1207 067F                     l1057 05BD  
                   l1049 05A5                     l1073 0582                     l1161 07BD  
                   l1145 0798                     l1137 0788                     l1153 07A5  
                   l1129 0773                     l1081 0707                     l1065 0541  
                   l1241 0702                     l1233 06E2                     l1225 06BB  
                   l1217 069E                     l1209 0684                     l1075 0589  
                   l1067 0578                     l1171 07CD                     l1163 07BF  
                   l1155 07AC                     l1147 079A                     l1139 078A  
                   l1083 071C                     l1059 0534                     l1235 06E7  
                   l1227 06C1                     l1219 06A4                     l1077 058D  
                   l1069 0578                     l1165 07C4                     l1157 07B4  
                   l1173 07D1                     l1149 079F                     l1093 0721  
                   l1085 071C                     l1181 0631                     l1237 06F0  
                   l1229 06D3                     l1079 0593                     l1175 07D7  
                   l1167 07C6                     l1159 07B6                     l1095 0729  
                   l1087 071F                     l1191 065D                     l1183 0632  
                   l1239 06FD                     l1177 07E4                     l1169 07CB  
                   l1097 0731                     l1185 063A                     l1193 0665  
                   l1099 0733                     l1195 0673                     l1187 064A  
                   l1199 0514                     STR_1 000E                     STR_2 0035  
                   STR_3 0024                     _WPUB 0095                     _main 0676  
                   btemp 007E                     start 0000            _LCD_String_xy 0577  
       __end_of_LCD_Char 0630         __end_of_LCD_Init 05C4                    ?_main 0070  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088             ?_keypad_init 0070                    pclath 000A  
                  status 0003                    wtemp0 007E          __end_of_strncmp 0676  
         ?_LCD_String_xy 0074          __initialization 07E8             __end_of_main 0707  
                 ??_main 0078        __end_of_LCD_Clear 0524      keypad_getkey@letras 0020  
                 _ANSELH 0189         LCD_String_xy@msg 0075         LCD_String_xy@pos 0074  
       LCD_String_xy@row 0076                   _OSCCON 008F         __end_of_password 000E  
              ??_strncmp 0073                ?_LCD_Char 0070  __end_of__initialization 07FC  
              ?_LCD_Init 0070          ??_LCD_String_xy 0076           __pcstackCOMMON 0070  
           __pidataBANK0 0524             ??_LCD_String 0073           _OPTION_REGbits 0081  
             __pbssBANK0 0043               ??_LCD_Char 0070               ??_LCD_Init 0073  
     __end_of_LCD_String 0577               __pmaintext 0676            _keypad_getkey 0707  
             __stringtab 0003            LCD_String@msg 0073                  __ptext1 0630  
                __ptext2 0534                  __ptext3 0707                  __ptext4 0577  
                __ptext5 0558                  __ptext6 05FA                  __ptext7 059A  
                __ptext8 0514                  __ptext9 05C4           ?_keypad_getkey 0070  
              _LCD_Clear 0514                  main@key 007B                  _strncmp 0630  
   end_of_initialization 07FC           LCD_Command@cmd 0072               ?_LCD_Clear 0070  
          ??_LCD_Command 0070          ??_keypad_getkey 0070       keypad_getkey@F1268 0033  
    start_initialization 07E8       keypad_getkey@valor 0030    __end_of_LCD_String_xy 059A  
             init_fetch0 0545              __pdataBANK0 0033      __end_of_LCD_Command 05FA  
            __pbssCOMMON 007C                ___latbits 0002            __pcstackBANK0 0020  
            ??_LCD_Clear 0073            ??_keypad_init 0070                __pstrings 0003  
  LCD_String_xy@location 0077                 ?_strncmp 0070                 _LCD_Char 05FA  
               _LCD_Init 059A                _pass_user 0043      __end_of_keypad_init 0545  
            _LCD_Command 05C4              __stringbase 0008       __end_of__stringtab 0009  
            _keypad_init 0534               strncmp@len 0071                 _password 0009  
             _LCD_String 0558    __end_of_keypad_getkey 07E8                 init_ram0 0549  
              strncmp@s1 0075                strncmp@s2 0070                stringcode 0003  
               stringdir 0003                 stringtab 0003           keypad_getkey@i 0031  
